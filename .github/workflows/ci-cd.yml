name: WebsocketCi/Cd Pipeline

on:
    push:
        branches:
                - dummy

jobs:
    build-and-deploy:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout Code
              uses: actions/checkout@v3

            - name: Set up JDK 21
              uses: actions/setup-java@v3
              with:
                distribution: 'temurin'
                java-version: '21'

            - name: Build Spring boot JaR
              run: |
                cd WebSocketSpring_
                mvn clean package -DskipTests
            
            - name: Build Backend Docker Image
              run: |                
                docker build -t jimsonrats/websocketapp-backend:latest -f Dockerfile.backend .

            - name: Install Node.js
              uses: actions/setup-node@v3
              with:
                node-version: '18'

            - name: Install Angular Dependencies & Build
              run: |
                cd websocketapp
                npm install
                npm run build --prod
                
            
            - name: Build Frontend Docker Image
              run: |
                docker build -t jimsonrats/websocketapp-backend:latest -f Dockerfile.frontend .
            
            - name: Login to Dockerhub
              run: echo"${{secrets.DOCKER_PASSWORD}}" | docker login -u ${{secrets.DOCKER_USERNAME}} --password-stdin

            - name: Push Backend Image
              run: docker push jimsonrats/websocketapp-backend:latest

            - name: Push Frontend Image
              run: docker push jimsonrats/websocketapp-frontend:latest
            
            - name: Set up SSH key
              
              run: |
                mkdir -p ~/.ssh
                echo "${{secrets.SSH_PRIVATE_KEY}}" > ~/.ssh/id_rsa
                chmod 600 ~/.ssh/id_rsa
                eval "$(ssh-agent -s)" 
                ssh-add ~/.ssh/id_rsa
                ssh-add -l
            
            - name: Add Sever Key to known_hosts
              run: |
                ssh-keyscan -H ${{secrets.EC2_PUBLIC_IP}} >> ~/.ssh/known_hosts

                chmod 644 ~/.ssh/known_hosts
            
            - name: Deploy to ec2 Server
              run: |
                
                ssh -vvv -o StrictHostKeyChecking=no ${{secrets.SSH_USERNAME}}@${{secrets.EC2_PUBLIC_IP}} << 'EOF'
                    echo "SSH works"
                    sudo su

                    cd /home/ubuntu

                    docker network create  sock-network
                    docker pull jimsonrats/websocketapp-backend:latest
                    docker pull jimsonrats/websocketapp-frontend:latest

                    docker-compose down
                    docker-compose up -d --force-recreate
                EOF